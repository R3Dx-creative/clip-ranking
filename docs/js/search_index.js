var search_data = {"index":{"searchIndex":["clip","clipclassifier","clipclassifiercui","config","==()","[]()","classify()","clips()","commit()","dest_path()","history_path()","move!()","new()","revert()","run()","save_history()","src_path()","to_s()","readme","readme"],"longSearchIndex":["clip","clipclassifier","clipclassifiercui","config","clip#==()","config::[]()","clipclassifier::classify()","clip::clips()","clip#commit()","clip#dest_path()","clipclassifier::history_path()","clip#move!()","clip::new()","clipclassifiercui::revert()","clipclassifiercui::run()","clipclassifier::save_history()","clip#src_path()","clip#to_s()","",""],"info":[["Clip","","Clip.html","","<p>ファイルといいね数を表すクラス。 主な機能はファイルの移動(<code>move!</code>メソッドと<code>commit</code>メソッド)。\n<p>例\n\n<pre class=\"ruby\"><span class=\"ruby-comment\"># clipsフォルダ、awesome_clip.mp4ファイル、いいね数10 を指定。</span>\n<span class=\"ruby-identifier\">clip</span> <span class=\"ruby-operator\">...</span>\n</pre>\n"],["ClipClassifier","","ClipClassifier.html","","<p>クリップを仕分けるモジュール。 <code>config/app_config.json</code>と<code>config/local_config.json</code>の設定値をもとに、<code>classify</code>メソッドでクリップを仕分ける。 仕様については …\n"],["ClipClassifierCUI","","ClipClassifierCUI.html","","<p>CUIによるクリップの仕分け\n<p>例\n\n<pre>result = {\n  &quot;0.txt&quot; =&gt; 0,\n  &quot;1.txt&quot; =&gt; 5,\n  &quot;2.txt&quot; =&gt; 5,\n  &quot;3.txt&quot; =&gt; 6,\n  &quot;4.txt&quot; =&gt; ...</pre>\n"],["Config","","Config.html","","<p>設定値を取得するクラス。<code>local_config.json</code>と<code>app_config.json</code>から設定値を読み込む。<code>Config[設定値のキー]</code>で設定値を取得する。\n"],["==","Clip","Clip.html#method-i-3D-3D","(other)","<p><code>other</code> &mdash; Clip オブジェクト\n\n<p>戻り値  &mdash; src_path, dest_path, <code>like</code> が等しいとき <em>true</em>, それ以外 <em>false</em>\n\n"],["[]","Config","Config.html#method-c-5B-5D","(s)","<p>設定値の取得\n"],["classify","ClipClassifier","ClipClassifier.html#method-c-classify","(*clips)","<p>クリップを仕分けるメソッド。設定値と Clip オブジェクトの<code>like</code>をもとに<code>move!</code>まで行う\n<p><code>clips</code> &mdash; クリップ集(Clip)\n\n<p>例\n"],["clips","Clip","Clip.html#method-c-clips","(src, result)","<p>フォルダ名と<code>result</code>(ファイル名といいね数の対応)をもとに、 フォルダ配下のファイルから Clip オブジェクトの配列を作成するメソッド。\n<p><code>src</code> &mdash; 格納されているフォルダ名\n<p><code>result</code> &mdash; ファイル名がキー、いいね数が値の …\n"],["commit","Clip","Clip.html#method-i-commit","()","<p>保持した移動先に実際に移動する。 格納先のフォルダが存在しなければ作成する。\n"],["dest_path","Clip","Clip.html#method-i-dest_path","()","<p>クリップの移動先のパス\n"],["history_path","ClipClassifier","ClipClassifier.html#method-c-history_path","()","<p>直前の移動情報を保持するファイルのパス\n"],["move!","Clip","Clip.html#method-i-move-21","(dest, option=nil)","<p>クリップ移動メソッド(移動先を保持するだけ)。  <code>commit</code>メソッドによって実際にファイルの移動を行う。 第二引数に<code>:force</code>を指定すると、ファイルの移動を行う。\n<p><code>dest</code> &mdash; 移動先フォルダ\n<p><code>option</code> … &mdash; "],["new","Clip","Clip.html#method-c-new","(dir, file, like)","<p><code>dir</code> &mdash; 格納されているフォルダ\n<p><code>file</code> &mdash; クリップのファイル名\n<p><code>like</code> &mdash; いいね数\n"],["revert","ClipClassifierCUI","ClipClassifierCUI.html#method-c-revert","()","<p><code>config/app_config.json</code>の<code>history</code>に設定しているファイルに書かれている履歴(※)をもとに移動を一つ前の状態に戻す。 (※ ClipClassifier.save_history …\n"],["run","ClipClassifierCUI","ClipClassifierCUI.html#method-c-run","(src, result)","<p>クリップの仕分けを実施する\n<p><code>src</code> &mdash; 仕分けたいクリップが格納されているフォルダ\n<p><code>result</code> &mdash; クリップのファイル名といいね数の対応\n"],["save_history","ClipClassifier","ClipClassifier.html#method-c-save_history","(clips)","<p>移動元と移動先の情報を保存する(直前の情報だけ)\n<p><code>clips</code> &mdash; クリップ集(Clip)\n\n"],["src_path","Clip","Clip.html#method-i-src_path","()","<p>クリップのパス\n"],["to_s","Clip","Clip.html#method-i-to_s","()",""],["README","","README_md.html","","<p>clip-ranking\n<p>みんなのクリップランキング化システム\n<p>概要\n"],["README","","config/README_md.html","","<p>設定ファイル\n<p><code>app_config</code>: アプリの設定。仕分け情報の設定など。\n<p><code>local_config</code>: ローカルでの設定。セキュリティ面を考慮。以下の設定を要求する。\n"]]}}